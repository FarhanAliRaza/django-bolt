# Auto-generated by django-bolt types. Do not edit manually.

from __future__ import annotations
from typing import Optional
from django_bolt.typecheck import TypedQuerySet, TypedManager
from django.db.models import Model

class User(Model):
    password: str
    last_login: Optional[datetime.datetime]
    is_superuser: bool
    username: str
    first_name: str
    last_name: str
    email: str
    is_staff: bool
    is_active: bool
    date_joined: datetime.datetime
    groups: int
    user_permissions: int
    objects: UserManager

class UserQuerySet(TypedQuerySet[User]):
    def filter(self, *, password: Optional[str] = ..., last_login: Optional[datetime.datetime] = ..., is_superuser: Optional[bool] = ..., username: Optional[str] = ..., first_name: Optional[str] = ..., last_name: Optional[str] = ..., email: Optional[str] = ..., is_staff: Optional[bool] = ..., is_active: Optional[bool] = ..., date_joined: Optional[datetime.datetime] = ..., groups: Optional[int] = ..., user_permissions: Optional[int] = ...) -> UserQuerySet: ...
    def exclude(self, *, password: Optional[str] = ..., last_login: Optional[datetime.datetime] = ..., is_superuser: Optional[bool] = ..., username: Optional[str] = ..., first_name: Optional[str] = ..., last_name: Optional[str] = ..., email: Optional[str] = ..., is_staff: Optional[bool] = ..., is_active: Optional[bool] = ..., date_joined: Optional[datetime.datetime] = ..., groups: Optional[int] = ..., user_permissions: Optional[int] = ...) -> UserQuerySet: ...
    def get(self, *, password: Optional[str] = ..., last_login: Optional[datetime.datetime] = ..., is_superuser: Optional[bool] = ..., username: Optional[str] = ..., first_name: Optional[str] = ..., last_name: Optional[str] = ..., email: Optional[str] = ..., is_staff: Optional[bool] = ..., is_active: Optional[bool] = ..., date_joined: Optional[datetime.datetime] = ..., groups: Optional[int] = ..., user_permissions: Optional[int] = ...) -> User: ...

class UserManager(TypedManager[User]):
    def filter(self, *, password: Optional[str] = ..., last_login: Optional[datetime.datetime] = ..., is_superuser: Optional[bool] = ..., username: Optional[str] = ..., first_name: Optional[str] = ..., last_name: Optional[str] = ..., email: Optional[str] = ..., is_staff: Optional[bool] = ..., is_active: Optional[bool] = ..., date_joined: Optional[datetime.datetime] = ..., groups: Optional[int] = ..., user_permissions: Optional[int] = ...) -> UserQuerySet: ...
    def exclude(self, *, password: Optional[str] = ..., last_login: Optional[datetime.datetime] = ..., is_superuser: Optional[bool] = ..., username: Optional[str] = ..., first_name: Optional[str] = ..., last_name: Optional[str] = ..., email: Optional[str] = ..., is_staff: Optional[bool] = ..., is_active: Optional[bool] = ..., date_joined: Optional[datetime.datetime] = ..., groups: Optional[int] = ..., user_permissions: Optional[int] = ...) -> UserQuerySet: ...
    def get(self, *, password: Optional[str] = ..., last_login: Optional[datetime.datetime] = ..., is_superuser: Optional[bool] = ..., username: Optional[str] = ..., first_name: Optional[str] = ..., last_name: Optional[str] = ..., email: Optional[str] = ..., is_staff: Optional[bool] = ..., is_active: Optional[bool] = ..., date_joined: Optional[datetime.datetime] = ..., groups: Optional[int] = ..., user_permissions: Optional[int] = ...) -> User: ...

