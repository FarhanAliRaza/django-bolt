# Auto-generated by django-bolt types. Do not edit manually.

from __future__ import annotations
from typing import Optional
from django_bolt.typecheck import TypedQuerySet, TypedManager
from django.db.models import Model

class User(Model):
    username: str
    email: str
    first_name: str
    last_name: str
    is_active: bool
    created_at: datetime.datetime
    objects: UserManager

class UserQuerySet(TypedQuerySet[User]):
    def filter(self, *, username: Optional[str] = ..., email: Optional[str] = ..., first_name: Optional[str] = ..., last_name: Optional[str] = ..., is_active: Optional[bool] = ..., created_at: Optional[datetime.datetime] = ...) -> UserQuerySet: ...
    def exclude(self, *, username: Optional[str] = ..., email: Optional[str] = ..., first_name: Optional[str] = ..., last_name: Optional[str] = ..., is_active: Optional[bool] = ..., created_at: Optional[datetime.datetime] = ...) -> UserQuerySet: ...
    def get(self, *, username: Optional[str] = ..., email: Optional[str] = ..., first_name: Optional[str] = ..., last_name: Optional[str] = ..., is_active: Optional[bool] = ..., created_at: Optional[datetime.datetime] = ...) -> User: ...

class UserManager(TypedManager[User]):
    def filter(self, *, username: Optional[str] = ..., email: Optional[str] = ..., first_name: Optional[str] = ..., last_name: Optional[str] = ..., is_active: Optional[bool] = ..., created_at: Optional[datetime.datetime] = ...) -> UserQuerySet: ...
    def exclude(self, *, username: Optional[str] = ..., email: Optional[str] = ..., first_name: Optional[str] = ..., last_name: Optional[str] = ..., is_active: Optional[bool] = ..., created_at: Optional[datetime.datetime] = ...) -> UserQuerySet: ...
    def get(self, *, username: Optional[str] = ..., email: Optional[str] = ..., first_name: Optional[str] = ..., last_name: Optional[str] = ..., is_active: Optional[bool] = ..., created_at: Optional[datetime.datetime] = ...) -> User: ...

